#!/usr/bin/env ruby

require 'fileutils'
require 'calabash-android/helpers'


require File.join(File.dirname(__FILE__), "calabash-android-helpers")
require File.join(File.dirname(__FILE__), "calabash-android-generate")
require File.join(File.dirname(__FILE__), "calabash-android-build")
require File.join(File.dirname(__FILE__), "calabash-android-run")
require File.join(File.dirname(__FILE__), "calabash-android-setup")
require File.join(File.dirname(__FILE__), "calabash-android-submit")

@features_dir = File.join(FileUtils.pwd, "features")
@support_dir = File.join(@features_dir, "support")
@source_dir = File.join(File.dirname(__FILE__), '..', 'features-skeleton')
@script_dir = File.join(File.dirname(__FILE__), '..', 'scripts')

config = get_config()

def is_apk_file?(file_path)
  file_path.end_with? ".apk" and File.exist? file_path
end

def relative_to_full_path(file_path)
  File.expand_path(file_path)
end

if (ARGV.length == 0)
  print_usage
  exit 0
end
cmd = ARGV.shift
if cmd == 'help'
  print_help
  exit 0
elsif cmd == 'build'
  if !config['app_path'].empty? and is_apk_file?(config['app_path'])
    calabash_build(config['app_path'])
  else
    puts "It looks like you did not fill out the build.yml config!"
  end
  exit 0
elsif cmd == 'run'
  if !config['app_path'].empty? and is_apk_file?(config['app_path'])
    calabash_run(config['app_path'])
  else
    puts "It looks like you did not fill out the build.yml config!"
  end
  exit 0
elsif cmd == 'gen'
  calabash_scaffold
  exit 0
elsif cmd == 'setup'
  calabash_setup
  exit 0
elsif cmd == 'submit'
  calabash_submit(ARGV)
  exit 0
else
  print_usage
end
